# -*- coding: utf-8 -*-
"""
Created on Thu Oct 18 00:09:53 2018

@author: MSG
"""

# -*- coding: utf-8 -*-
"""
Created on Mon Sep 24 12:02:59 2018

@author: MSG
"""

"""script to load and read json report for each apk that was analysed,
   extract required features and store them into a dictionary,
   append the feature_dictionary to a dict(dataset that stores
   all feature_dictionaries for all samples)

"""

import os, json


#listing all files in a directory with os.listdir and 
#then finding only those that end in '.json':
#this finds all our json files
#for benign samples change path to path_to_json = 'Benign/Reports'
path_to_json = 'Malware/Reports'
json_files = [pos_json for pos_json in os.listdir(path_to_json) 
                if pos_json.endswith('.json')]

#dataset to be generated after reading and extracting required features
#from each json
dataset = {} 
      
#we need both the json and an index number so we use enumerate()
for index, js in enumerate(json_files):
    with open(os.path.join(path_to_json, js)) as json_file:
        json_text = json.load(json_file)

        #here you need to know the layout of your json and 
        #each json has to have the same structure
        
        #get name of json report
        filename = json_text['virustotal']['md5']
        
        #extract required features from the json
        #static
        list_of_receivers =[]
        for i in range(len(json_text['apkinfo']['manifest']['receivers'])):
             list_of_receivers.append(json_text['apkinfo']['manifest']['receivers'][i])
        number_of_hidden_payload = len(json_text['apkinfo']['hidden_payload'])
        list_of_receivers_actions = json_text['apkinfo']['manifest']['receivers_actions']
        list_of_permissions = []
        for i in range(len(json_text['apkinfo']['manifest']['permissions'])):
             list_of_permissions.append(json_text['apkinfo']['manifest']['permissions'][i]['name'])
        number_of_strings= len(json_text['strings'])
	 
        #dynamic behaviors
        api_names_freq = json_text['droidmon']['api']
       
        registered_receivers= json_text['droidmon']['registered_receivers']
        number_of_loadDex = len(json_text['droidmon']['loadDex'])
        list_of_fingerprints = json_text['droidmon']['fingerprint'] 
        number_of_udp_conn = len(json_text['network']['udp'])
        number_of_tcp_conn = len(json_text['network']['tcp'])
		
        #set  malware = 'no' if you are reading jsons from benign samples
        malware = '1'
                       
        #store extracted features into a dictionary
        Features_extracted = {'list_of_receivers':list_of_receivers,
                              'number_of_hidden_payload': number_of_hidden_payload,
                              'list_of_receivers_actions':list_of_receivers_actions,
                              'list_of_permissions': list_of_permissions, 
                                "api_names_freq":api_names_freq , 
                              'registered_receivers':registered_receivers,
                              'number_of_loadDex': number_of_loadDex , 
                              'list_of_fingerprints':list_of_fingerprints , 
                              'number_of_strings': number_of_strings,
                              'number_of_udp_conn':number_of_udp_conn,
                              'number_of_tcp_conn':number_of_tcp_conn,
                              'malware':malware}
                
        #add features of the json read to dataset            
        dataset.update({filename : Features_extracted})      

#write data(dataset) to a json file
#rename file to Bfeatures_json.json for jsons from benign samples
with open('Mfeatures_json.json', 'a') as fj:
    json.dump(dataset, fj, indent = 2) 

"""******************************END****************************************""" 
