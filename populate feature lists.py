# -*- coding: utf-8 -*-
"""
Created on Fri Oct 19 20:25:48 2018

@author: MSG
"""



"""this script2; reads final json(dataset) and builds a dataframe"""
""" and populate feature lists"""
import json
import pandas as pd

#LOAD DATA
 
#load .json datasets for malware and benign
#concatenate them
with open("Mfeatures_json.json", "r") as mal:
    data_m = json.load(mal)
with open("Bfeatures_json.json", "r") as beg:
    data_b = json.load(beg)
    
data_m.update(data_b)

with open("M_Bfeatures_json.json", "w") as fo:
    json.dump(data_m, fo, indent = 2)


#CREATE PANDAS DATAFRAME
    
#here I define my pandas Dataframe with the columns I want to get from the json
#dataset for all samples(malware & benign)
column_list = ['list_of_receivers', 'list_of_receivers_actions',   
                                   'list_of_permissions', 'api_names_freq',
                                   'registered_receivers','number_of_loadDex ',
                                   'list_of_fingerprints','number_of_strings',
                                   'number_of_udp_conn','number_of_tcp_conn',
                                                                     'malware']
#general lists upon which presence check will be made
Glist_of_receivers = []
Glist_of_receivers_actions = []
Glist_of_permissions = []
Glist_of_api_names = []
Gregistered_receivers = []
Glist_of_fingerprints = []


dataset = pd.DataFrame(columns = column_list )

#populate dataset
with open("M_Bfeatures_json.json", "r") as d:
    json_dataset = json.load(d)
    
     
    for key, value in json_dataset.items():
        
        # here I push a list of data into a pandas DataFrame 
        # each key(sample) forms a row
        #this function will be transfered to the final script that
        #reads the json file created here
        
       list_of_receivers = value['list_of_receivers']
       list_of_receivers_actions = value['list_of_receivers_actions']
       list_of_permissions = value['list_of_permissions']
       
       api_names_freq =   value['api_names_freq']
       registered_receivers =  value['registered_receivers']
       number_of_loadDex = value[' number_of_loadDex ']
       list_of_fingerprints = value['list_of_fingerprints ']
       number_of_strings =  value[' number_of_strings']
       number_of_udp_conn = value['number_of_udp_conn']
       number_of_tcp_conn = value['number_of_tcp_conn']
       malware = value['malware']
        
       #POPULATE GENERAL LISTS UPON WHICH FEATURE PRESENCE CHECK WILL BE DONE
       #list_of_receivers_actions
       for i in range(len(list_of_receivers_actions)):
           if  list_of_receivers_actions[i] not in Glist_of_receivers_actions:
               Glist_of_receivers_actions.append(list_of_receivers_actions[i])
       
       #list_of_receivers
       for i in range(len(list_of_receivers)):
           if  list_of_receivers[i] not in Glist_of_receivers:
               Glist_of_receivers.append(list_of_receivers[i]) 
       
       #list_of_permissions
       for i in range(len(list_of_permissions)):
           if  list_of_permissions[i] not in Glist_of_permissions:
               Glist_of_permissions.append(list_of_permissions[i]) 
       
    
       #list_of_api_names
       for key in  api_names_freq.keys():
           if key not in Glist_of_api_names:
               Glist_of_api_names.append(key) 
        
       #registered_receivers
       for i in range(len(registered_receivers)):
           if  registered_receivers[i] not in Gregistered_receivers:
               Gregistered_receivers.append(registered_receivers[i]) 
        
       #list_of_fingerprints
       for i in range(len(list_of_fingerprints)):
           if  list_of_fingerprints[i] not in Glist_of_fingerprints:
               Glist_of_fingerprints.append(list_of_fingerprints[i])       
       
        
        
        
      
"""******************************END****************************************"""

            
          
    
