
# -*- coding: utf-8 -*-
"""
Created on Sat Oct 13 12:49:34 2018

@author: MSG
"""

"""this script2; reads final json(dataset) and builds a dataframe"""
import json
import pandas as pd

#LOAD DATA
 
#load .json datasets for malware and benign
#concatenate them
with open("Mfeatures_json.json", "r") as mal:
    data_m = json.load(mal)
with open("Bfeatures_json.json", "r") as beg:
    data_b = json.load(beg)
    
data_m.update(data_b)

with open("M_Bfeatures_json.json", "w") as fo:
    json.dump(data_m, fo, indent = 2)


#CREATE PANDAS DATAFRAME
#here I define my pandas Dataframe with the columns I want to get from the json
#dataset for all samples(malware & benign)
    
    
#general lists upon which presence check will be made for our columns
#these are the features under investigation for each app
Glist_of_permissions = ['android.permission.INTERNET',
 'android.permission.ACCESS_NETWORK_STATE',
 'android.permission.READ_PHONE_STATE',
 'android.permission.SET_WALLPAPER',
 'android.permission.WRITE_EXTERNAL_STORAGE',
 'android.permission.MOUNT_UNMOUNT_FILESYSTEMS',
 'android.permission.RECEIVE_SMS',
 'android.permission.SEND_SMS',
 'android.permission.RECEIVE_WAP_PUSH',
 'android.permission.WRITE_APN_SETTINGS',
 'android.permission.RECEIVE_BOOT_COMPLETED',
 'android.permission.WAKE_LOCK',
 'android.permission.CHANGE_NETWORK_STATE',
 'android.permission.READ_SMS',
 'android.permission.INSTALL_PACKAGES',
 'android.permission.RESTART_PACKAGES',
 'android.permission.REBOOT',
 'android.permission.DELETE_PACKAGES',
 'android.permission.DELETE_CACHE_FILES',
 'android.permission.CLEAR_APP_USER_DATA',
 'android.permission.CLEAR_APP_CACHE',
 'android.permission.ACCESS_WIFI_STATE',
 'android.permission.CHANGE_WIFI_STATE',
 'android.permission.CALL_PHONE',
 'android.permission.CAMERA',
 'android.permission.BATTERY_STATS',
 'android.permission.VIBRATE',
 'android.permission.ACCESS_FINE_LOCATION',
 'android.permission.ACCESS_MOCK_LOCATION',
 'android.permission.ACCESS_COARSE_LOCATION',
 'android.permission.READ_CONTACTS',
 'vn.mecorp.iwin.permission.C2D_MESSAGE',
 'com.google.android.c2dm.permission.RECEIVE',
 'android.permission.GET_ACCOUNTS',
 'android.permission.WRITE_SMS',
 'android.permission.KILL_BACKGROUND_PROCESSES',
 'android.permission.SYSTEM_ALERT_WINDOW',
 'android.permission.WRITE_SETTINGS',
 'android.permission.RECORD_AUDIO',
 'android.permission.FLASHLIGHT',
 'android.permission.READ_LOGS',
 'android.permission.DUMP',
 'com.android.launcher.permission.INSTALL_SHORTCUT',
 'android.permission.ACCESS_SURFACE_FLINGER',
 'android.permission.BLUETOOTH',
 'android.permission.BLUETOOTH_ADMIN',
 'android.permission.BROADCAST_PACKAGE_REMOVED',
 'android.permission.BROADCAST_SMS',
 'android.permission.BROADCAST_WAP_PUSH',
 'android.permission.CALL_PRIVILEGED',
 'android.permission.CHANGE_COMPONENT_ENABLED_STATE',
 'android.permission.CHANGE_CONFIGURATION',
 'android.permission.CONTROL_LOCATION_UPDATES',
 'android.permission.DEVICE_POWER',
 'android.permission.DISABLE_KEYGUARD',
 'android.permission.EXPAND_STATUS_BAR',
 'android.permission.FORCE_BACK',
 'android.permission.GET_PACKAGE_SIZE',
 'android.permission.GET_TASKS',
 'android.permission.INJECT_EVENTS',
 'android.permission.MODIFY_AUDIO_SETTINGS',
 'android.permission.PROCESS_OUTGOING_CALLS',
 'android.permission.READ_FRAME_BUFFER',
 'android.permission.RECEIVE_MMS',
 'android.permission.SET_ALWAYS_FINISH',
 'android.permission.SET_DEBUG_APP',
 'android.permission.SET_ORIENTATION',
 'android.permission.SET_PREFERRED_APPLICATIONS',
 'android.permission.SET_TIME',
 'android.permission.SET_TIME_ZONE',
 'android.permission.SET_WALLPAPER_HINTS',
 'android.permission.SIGNAL_PERSISTENT_PROCESSES',
 'android.permission.STATUS_BAR',
 'android.permission.USE_CREDENTIALS',
 'android.permission.USE_SIP',
 'android.permission.WRITE_CONTACTS',
 'android.permission.CHANGE_WIFI_MULTICAST_STATE',
 'android.permission.MODIFY_PHONE_STATE',
 'com.android.alarm.permission.SET_ALARM',
 'android.permission.WRITE_SECURE_SETTINGS',
 'android.permission.READ_CALL_LOG',
 'com.google.android.providers.gsf.permission.READ_GSERVICES',
 'com.cleartrip.android.permission.C2D_MESSAGE',
 'android.permission.READ_EXTERNAL_STORAGE',
 'android.permission.BIND_ACCESSIBILITY_SERVICE',
 'android.permission.REQUEST_INSTALL_PACKAGES',
 'com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE',
 'com.android.launcher.permission.READ_SETTINGS',
 'com.apkpure.aegon.permission.C2D_MESSAGE',
 'com.android.vending.BILLING',
 'com.bitmango.go.stringart.permission.C2D_MESSAGE',
 'in.amazon.mShop.android.shopping.permission.C2D_MESSAGE',
 'amazon.permission.COLLECT_METRICS',
 'com.amazon.dcp.metrics.permission.METRICS_PERMISSION',
 'com.amazon.dcp.config.permission.DYN_CONFIG_VALUES_UPDATED',
 'android.permission.MANAGE_ACCOUNTS',
 'android.permission.AUTHENTICATE_ACCOUNTS',
 'com.amazon.identity.auth.device.perm.AUTH_SDK',
 'com.amazon.identity.permission.GENERIC_IPC',
 'com.amazon.dcp.sso.permission.USE_DEVICE_CREDENTIALS',
 'com.amazon.dcp.sso.permission.account.changed',
 'com.amazon.dcp.sso.permission.MANAGE_COR_PFM',
 'com.amazon.dcp.sso.permission.CUSTOMER_ATTRIBUTE_SERVICE',
 'com.amazon.identity.permission.CAN_CALL_MAP_INFORMATION_PROVIDER',
 'com.amazon.dcp.sso.permission.AmazonAccountPropertyService.property.changed',
 'com.amazon.identity.permission.CALL_AMAZON_DEVICE_INFORMATION_PROVIDER',
 'com.amazon.appmanager.preload.permission.READ_PRELOAD_DEVICE_INFO_PROVIDER',
 'com.sec.android.provider.badge.permission.READ',
 'com.sec.android.provider.badge.permission.WRITE',
 'com.htc.launcher.permission.READ_SETTINGS',
 'com.htc.launcher.permission.UPDATE_SHORTCUT',
 'com.amazon.client.metrics.nexus.permission.TRIGGER_UPLOAD',
 'android.permission.RECIEVE_SMS']

Glist_of_receivers =['me.system.call.sb',
 'com.android.system.reads.receiver.SyncRunReceiver',
 'com.android.system.reads.receiver.StartReceiver',
 'com.android.system.reads.server.MainService$MainNetStateReceiver',
 'vn.mecorp.iwin.IWinGCMbroadcastReceiver',
 'smart.apps.droidcleaner.BootCompletedReceiver',
 'com.google.getdata.ConfigureReceiver',
 'com.google.getdata.StartReceiver',
 'com.google.getdata.StopReceiver',
 'com.sohu.inputmethod.multimedia.MultiMediaTransferReceiver',
 'com.sohu.inputmethod.settings.AutoUpgradeReceiver',
 'com.sohu.inputmethod.settings.internet.SoftwareStatistics',
 'com.sohu.inputmethod.settings.UpgradeTip',
 'com.sohu.inputmethod.widget.ThemeWidgetProvider',
 'com.sohu.inputmethod.sogou.SogouIMELauncherbciu',
 'com.cleartrip.android.network.util.NetworkChangeRecevier',
 'com.apsalar.sdk.ApsalarReceiver',
 'com.cleartrip.android.receiver.AnalyticsBroadcastReceiver',
 'com.google.android.gms.analytics.CampaignTrackingReceiver',
 'com.cleartrip.android.receiver.ClearDataReceiver',
 'io.branch.referral.InstallListener',
 'com.cleartrip.android.receiver.BootReceiver',
 'com.cleartrip.android.receiver.InAppReciever',
 'com.google.android.gms.analytics.AnalyticsReceiver',
 'com.clevertap.android.sdk.InstallReferrerBroadcastReceiver',
 'com.clevertap.android.sdk.CTPushNotificationReceiver',
 'com.google.android.gms.measurement.AppMeasurementReceiver',
 'com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver',
 'com.facebook.CurrentAccessTokenExpirationBroadcastReceiver',
 'com.google.firebase.iid.FirebaseInstanceIdReceiver',
 'com.apkpure.aegon.events.SystemBootEvent$Receiver',
 'com.apkpure.aegon.events.SystemPackageEvent$Receiver',
 'com.apkpure.aegon.events.NotificationEvent',
 'com.power.PowerReceiver',
 'nativesdk.ad.common.receiver.NetworkSwitchReceiver',
 'nativesdk.ad.common.receiver.PackageAddedReceiver',
 'nativesdk.ad.common.utils.SdkInternal$AppwallActionReceiver',
 'com.just.agentweb.DownLoader$NotificationBroadcastReceiver',
 'com.appsflyer.MultipleInstallBroadcastReceiver',
 'com.bitmango.AlarmReceiver',
 'com.amazon.mShop.pushnotification.gcm.MShopGCMBroadcastReceiver',
 'com.amazon.traffic.automation.notification.activity.ScheduleCallBackBroadcastReceiver',
 'com.amazon.traffic.automation.notification.util.PushNotificationBroadcastReceiver',
 'com.amazon.mShop.sso.SSOAccountListener',
 'com.amazon.mShop.appstore.AppstoreCoinBalanceReceiver',
 'com.amazon.venezia.mShop.MshopAuthenticationReceiver',
 'com.amazon.mShop.kiang.DeviceRegistrationReceiver',
 'com.amazon.mShop.error.NetworkChangeReceiver',
 'com.amazon.mShop.pushnotification.MShopClearNotificationReceiver',
 'com.amazon.mShop.MShopReferralInstallationReceiver',
 'com.amazon.identity.auth.device.storage.LambortishClock$ChangeTimestampsBroadcastReceiver',
 'com.amazon.identity.auth.accounts.SessionUserChangedToAccountForPackageChangedAdpater',
 'com.amazon.clouddrive.library.device.receivers.ExternalMediaChangeReceiverProxy',
 'com.amazon.clouddrive.library.device.receivers.AutoUploadReceiverProxy',
 'com.amazon.clouddrive.library.device.receivers.ConnectivityReceiverProxy',
 'com.amazon.clouddrive.library.device.receivers.CameraActionReceiverProxy',
 'com.amazon.clouddrive.library.device.receivers.PackageReceiverProxy',
 'com.amazon.mShop.deferredDeeplink.InstallReferrerReceiver',
 'com.google.android.gms.wallet.EnableWalletOptimizationReceiver']

Glist_of_receivers_actions = ['android.intent.action.BOOT_COMPLETED',
 'android.intent.action.ACTION_POWER_CONNECTED',
 'android.intent.action.ACTION_POWER_DISCONNECTED',
 'android.intent.action.USER_PRESENT',
 'com.android.action.com.android.system.reads.run',
 'android.net.conn.CONNECTIVITY_CHANGE',
 'com.google.android.c2dm.intent.RECEIVE',
 'com.google.android.c2dm.intent.REGISTRATION',
 'com.google.getdata.APP_LAUNCH_ACTION',
 'android.appwidget.action.APPWIDGET_UPDATE',
 'com.sohu.inputmethod.skinwidget.REFRESH',
 'com.sohu.inputmethod.skinwidget',
 'com.sohu.inputmethod.sogou.jfxuucp',
 'android.net.wifi.WIFI_STATE_CHANGED',
 'android.intent.action.ANY_DATA_STATE',
 'android.net.wifi.STATE_CHANGE',
 'com.android.vending.INSTALL_REFERRER',
 'android.intent.action.PACKAGE_REPLACED',
 'IMAGE_CACHE_CLEAR',
 'com.facebook.sdk.ACTION_CURRENT_ACCESS_TOKEN_CHANGED',
 'android.intent.action.PACKAGE_ADDED',
 'android.intent.action.PACKAGE_REMOVED',
 'notification_cancelled',
 'notification_clicked',
 'com.google.android.gms.analytics.ANALYTICS_DISPATCH',
 'com.mobpower.sdk.probe',
 'com.mobpower.sdk.probe.action',
 'android.intent.action.QUICKBOOT_POWERON',
 'anative.action.appwall_opened',
 'anative.action.appwall_closed',
 'com.amazon.dcp.sso.action.account.added',
 'com.amazon.dcp.sso.action.account.removed',
 'com.amazon.mShop.appstore.coin.valueChanged',
 'com.amazon.mas.client.authentication.action.USER_DEREGISTERED_ACTION',
 'com.amazon.mas.client.authentication.action.CURRENT_ACCOUNT_CHANGED_ACTION',
 'android.intent.action.TIME_SET',
 'com.amazon.dcp.sso.action.session.users.changed',
 'android.intent.action.MEDIA_SCANNER_FINISHED',
 'com.android.camera.NEW_PICTURE',
 'com.android.camera.NEW_VIDEO',
 'android.hardware.action.NEW_PICTURE',
 'android.hardware.action.NEW_VIDEO',
 'com.amazon.INSTALL_REFERRER',
 'com.google.android.gms.wallet.ENABLE_WALLET_OPTIMIZATION']

Gregistered_receivers = ['android.net.conn.CONNECTIVITY_CHANGE',
 'com.sohu.inputmethod.sogou.jfxuucp',
 'android.intent.action.INPUT_METHOD_CHANGED',
 'android.intent.action.AIRPLANE_MODE',
 'android.intent.action.BATTERY_CHANGED',
 'NEW_INSTALL',
 'android.intent.action.ACTION_POWER_DISCONNECTED',
 'com.apsalar.sdk.SOFT_RESET',
 'android.net.wifi.WIFI_STATE_CHANGED',
 'android.intent.action.ACTION_POWER_CONNECTED',
 'android.intent.action.PACKAGE_ADDED',
 'com.cloudtech.ads.Debug',
 'com.apkpure.aegon.events.SETTING_CHANGED',
 'android.security.STORAGE_CHANGED',
 'android.intent.action.PROXY_CHANGE',
 'android.intent.action.SCREEN_OFF',
 'android.intent.action.USER_PRESENT',
 'android.intent.action.PACKAGE_REMOVED']


Glist_of_fingerprints = ['getDeviceId',
 'getNetworkOperatorName',
 'getSubscriberId',
 'getMacAddress',
 'getSimCountryIso',
 'getSimOperatorName',
 'getNetworkCountryIso']

Glist_of_api_names = ['android_telephony_TelephonyManager_getDeviceId',
 'android_app_SharedPreferencesImpl_EditorImpl_putString',
 'java_lang_reflect_Method_invoke',
 'java_net_ProxySelectorImpl_select',
 'android_telephony_TelephonyManager_getNetworkOperatorName',
 'org_apache_http_impl_client_AbstractHttpClient_execute',
 'android_app_Activity_startActivity',
 'java_io_File_exists',
 'android_app_SharedPreferencesImpl_EditorImpl_putLong',
 'libcore_io_IoBridge_open',
 'android_os_SystemProperties_get',
 'android_app_SharedPreferencesImpl_EditorImpl_putInt',
 'android_app_ContextImpl_registerReceiver',
 'android_app_SharedPreferencesImpl_EditorImpl_putBoolean',
 'dalvik_system_BaseDexClassLoader_findResource',
 'dalvik_system_BaseDexClassLoader_findLibrary',
 'android_content_ContentResolver_registerContentObserver',
 'android_content_ContextWrapper_openFileOutput',
 'android_content_ContextWrapper_startService',
 'java_net_URL_openConnection',
 'android_os_Process_killProcess',
 'android_app_ActivityManager_getRunningAppProcesses',
 'android_app_ActivityManager_killBackgroundProcesses',
 'android_content_ContextWrapper_startActivity',
 'android_content_ContextWrapper_sendBroadcast',
 'android_app_ActivityThread_handleReceiver',
 'dalvik_system_DexClassLoader_dalvik_system_DexClassLoader',
 'java_lang_Runtime_load',
 'dalvik_system_DexFile_openDexFile',
 'dalvik_system_DexFile_loadDex',
 'android_telephony_TelephonyManager_getSubscriberId',
 'dalvik_system_DexFile_dalvik_system_DexFile',
 'android_net_wifi_WifiInfo_getMacAddress',
 'android_telephony_TelephonyManager_getNetworkCountryIso',
 'android_util_Base64_decode',
 'android_util_Base64_encode',
 'android_telephony_TelephonyManager_getSimCountryIso',
 'android_content_ContentValues_put',
 'android_util_Base64_encodeToString',
 'android_os_Debug_isDebuggerConnected',
 'android_telephony_TelephonyManager_getSimOperatorName',
 'android_content_ContentResolver_insert',
 'android_content_ContentResolver_query',
 'dalvik_system_DexFile_loadClass',
 'javax_crypto_Cipher_doFinal',
 'android_webkit_WebView_setWebViewClient',
 'javax_crypto_spec_SecretKeySpec_javax_crypto_spec_SecretKeySpec']

others = ['number_of_loadDex' ,'number_of_strings', 'number_of_hidden_payload'
                       ,'number_of_udp_conn','number_of_tcp_conn','malware']
    
#create dataset(293columns of features)

dataset = pd.DataFrame(columns = Glist_of_permissions + Glist_of_receivers 
                       + Glist_of_receivers_actions + Gregistered_receivers+ 
                        Glist_of_fingerprints + Glist_of_api_names +  others)

#initialize  dataset with 0 values for all features
with open("M_Bfeatures_json.json", "r") as d:
    json_dataset = json.load(d)
  
    #add rows with only index values(md5)
    for key  in json_dataset.keys(): 
        dataset.loc[key] = 0 
       
#CHECK FOR Features and update corresponding  dataset values  
with open("M_Bfeatures_json.json", "r") as d:
    json_dataset = json.load(d)
    
    for key, value in json_dataset.items():
        
        # here I push append  data to a pandas DataFrame 
        # each key(sample) forms a row
                     
       list_of_permissions = value['list_of_permissions']
       list_of_receivers = value['list_of_receivers']
       list_of_receivers_actions = value['list_of_receivers_actions']
       registered_receivers =  value['registered_receivers']
       list_of_fingerprints = value['list_of_fingerprints']
       api_names_freq =   value['api_names_freq']
       number_of_loadDex = value['number_of_loadDex']
       number_of_strings =  value['number_of_strings']
       number_of_hidden_payload = value['number_of_hidden_payload']
       number_of_udp_conn = value['number_of_udp_conn']
       number_of_tcp_conn = value['number_of_tcp_conn']
       malware = value['malware']
            
       #update presence of given permission for sample(key)
       for i in range(len(list_of_permissions)):
           m =  list_of_permissions[i]        
           if m in Glist_of_permissions:
               dataset.loc[key, m] = 1
    
       #update presence of given receiver for sample(key)
       for i in range(len(list_of_receivers)):
           m =  list_of_receivers[i]        
           if m in Glist_of_receivers:
               dataset.loc[key, m] = 1
               
       #update presence of given receivers_action for sample(key)
       for i in range(len(list_of_receivers_actions)):
           m =  list_of_receivers_actions[i]        
           if m in Glist_of_receivers_actions:
               dataset.loc[key, m] = 1
               
       #update presence of given registered_receiver for sample(key)
       for i in range(len(registered_receivers)):
           m =  registered_receivers[i]        
           if m in Gregistered_receivers:
               dataset.loc[key, m] = 1
        
       #update presence of given fingerprint for sample(key)
       for i in range(len(list_of_fingerprints)):
           m = list_of_fingerprints[i]        
           if m in Glist_of_fingerprints:
               dataset.loc[key, m] = 1 
               
       #update freg of api calls for sample(key) 
       for api in api_names_freq.keys():
           m = api
           if m in Glist_of_api_names:
                dataset.loc[key, m] = api_names_freq[m] 

       #update  others features
       """number_of_loadDex ,number_of_strings, number_of_udp_conn
          ,number_of_tcp_conn ,classification_value(malware;1 & benign;0) """
       dataset.loc[key, 'number_of_loadDex'] = number_of_loadDex
       dataset.loc[key, 'number_of_strings'] = number_of_strings
       dataset.loc[key, 'number_of_hidden_payload'] =  number_of_hidden_payload
       dataset.loc[key, 'number_of_udp_conn'] = number_of_udp_conn
       dataset.loc[key, 'number_of_tcp_conn'] = number_of_tcp_conn
       dataset.loc[key, 'malware'] = malware

#save dataset in  csv format
dataset.to_csv("MSGmalware_analysis_dataset.csv",  encoding='utf8')   
     
"""******************************END****************************************"""

            
          
    
